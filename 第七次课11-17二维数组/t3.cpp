#include <iostream>
#include <memory.h>
using namespace std;
const int d[8][2]={-1,-1,-1,0,-1,1,0,-1,0,1,1,-1,1,0,1,1};
//创建常量数组，不能再被赋值 
int main()
{
    int a,b,i,j,t,count;
    char z;
    cin>>a>>b;
    int map[a+2][b+2];
    memset(map,0,sizeof map);
    for(i=1;i<=a;i++){
        for(j=1;j<=b;j++){
            cin>>z;
            if(z=='?')
                map[i][j]=0;
            else
                map[i][j]=1;
        }
    }
    for(i=1;i<=a;i++){
        for(j=1;j<=b;j++){
            if(map[i][j]==1){
                cout<<"*";
            }else{
                count=0;	
                for(t=0;t<8;t++)
                    count+=map[i+d[t][0]][j+d[t][1]];
                cout<<count;
            }
        }
        cout<<endl;
    }
    system("pause");
    return 0;
}
/* 
题目描述
扫雷游戏是一款十分经典的单机小游戏。在 n 行 m 列的雷区中有一些格子含有地雷
（称之为地雷格），其他格子不含地雷（称之为非地雷格）。玩家翻开一个非地雷格时，
该格将会出现一个数字――提示周围格子中有多少个是地雷格。
游戏的目标是在不翻出任何地雷格的条件下，找出所有的非地雷格。
现在给出 n 行 m 列的雷区中的地雷分布，要求计算出每个非地雷格周围的地雷格数。

注：一个格子的周围格子包括其上、下、左、右、左上、左下、右下八个方向上与之直接相邻的格子。

输入格式
输入文件第一行是用一个空格隔开的两个整数n和m，分别表示雷区的行数和列数。
接下来 n 行，每行 m 个字符，描述了雷区中的地雷分布情况。
字符 ‘?’ 表示相应格子是地雷格，字符 ‘?’ 表示相应格子是非地雷格。
相邻字符之间无分隔符。

输出格式
输出文件包含 n 行，每行 m 个字符，描述整个雷区。用 ‘?’ 表示地雷格，
用周围的地雷个数表示非地雷格。相邻字符之间无分隔符。
*/
